const http = require('http'),
      fs = require('fs'),
      execFile = require('child_process').execFile;
      

function rawPrint(printer, data) {
  return new Promise(function(resolve, reject) {
    var temp = __dirname + '/temp/' + Date.now() + '.prn';
    fs.writeFileSync(temp, data);
    
    execFile(__dirname + '/bin/RawPrint', [ printer, temp ], function (error, stdout, stderr) {
      if (error) {
        reject(stderr);
      } else {
        resolve(stdout);        
      } 
      
      fs.unlinkSync(temp);
    });
  });
}

      
module.exports = function(port, password) {
  return http.createServer(function (request, response) {
    var result = {
          error: false,
          messages: []
        },
        body = [];
    
    if (request.url === '/raw-print-client.js' || request.url === '/index.html') {
      response.end(fs.readFileSync(__dirname + '/dist/' + request.url)); 
      return null;
    }
      
    request.on('error', function(err) {      
      result.error = true;
      result.messages.push(err.toString());
      response.end(JSON.stringify(result));
      return null;      
    })
    .on('data', function(chunk) {
      body.push(chunk);
    })
    .on('end', () => {
      body = Buffer.concat(body).toString();
            
      try {
        body = JSON.parse(body);
      } catch(e) {
        result.error = true;
        result.messages.push('Invalid JSON');
        response.end(JSON.stringify(result));
        return null;              
      }
          
      if (request.url !== '/raw-print-server') {
        result.error = true;
        result.messages.push('Not allowed.');
        response.end(JSON.stringify(result));
        return null;     
      }
      
      if (body.password !== password) {
        result.error = true;
        result.messages.push('Invalid password.');
        response.end(JSON.stringify(result));
        return null;
      }
      
      rawPrint(body.printer, body.data)
        .then(function() {
          result.messages.push('Success print.');  
        })
        .catch(function(err) {
          result.error = true;
          result.messages.push(err);      
        })
        .then(function() {    
          response.end(JSON.stringify(result));
        });
      
    });  
    
  })
  .listen(port, function(error) {
    if (error) {
      return console.error('Something bad happened ', err)
    }

    console.log('Server is listening on ' + port);
  });
}